import itertools

def travelling_salesman_problem(distance_matrix):
    n = len(distance_matrix)
    all_sets = (1 << n) - 1
    memo = [[None] * n for _ in range(1 << n)]

    def tsp(mask, pos):
        if mask == all_sets:
            return distance_matrix[pos][0]
        if memo[mask][pos] is not None:
            return memo[mask][pos]
        min_cost = float('inf')
        for city in range(n):
            if mask & (1 << city) == 0:
                new_cost = distance_matrix[pos][city] + tsp(mask | (1 << city), city)
                min_cost = min(min_cost, new_cost)
        memo[mask][pos] = min_cost
        return min_cost
    return tsp(1, 0)
distance_matrix = [
    [0, 10, 15, 20],
    [10, 0, 35, 25],
    [15, 35, 0, 30],
    [20, 25, 30, 0]
]

result = travelling_salesman_problem(distance_matrix)
print(f"The minimum cost of visiting all cities is: {result}")

